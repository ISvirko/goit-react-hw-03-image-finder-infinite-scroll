{"version":3,"sources":["services/imagesApi.js","components/Spinner.js","components/Searchbar.js","components/ImageGalleryItem.js","components/ImageGallery.js","components/Modal.js","components/Notification.js","components/LargeImg.js","components/ToTopButton.js","components/App.js","index.js"],"names":["apiKey","searchQuery","page","perPage","axios","get","then","response","Spinner","className","type","color","height","width","timeout","Searchbar","state","inputValue","handleChange","e","setState","target","value","handleSubmit","preventDefault","props","onSubmit","this","autoComplete","autoFocus","placeholder","onChange","Component","ImageGalleryItem","webformatURL","largeImageURL","tags","onGetLargeImageUrl","src","alt","onClick","ImageGallery","images","map","image","key","id","Modal","closeModal","code","onCloseModal","window","addEventListener","removeEventListener","children","Notification","message","error","store","addNotification","title","insert","container","animationIn","animationOut","dismiss","duration","LargeImg","largeImg","ToTopButton","atTheTop","toggleButton","smoothScroll","scrollTo","top","document","documentElement","scrollHeight","behavior","App","hasMore","fetchImages","a","imagesApi","result","prev","data","hits","length","total","console","log","handleSearchSubmit","query","getLargeImageUrl","prevProps","prevState","dataLength","next","loader","endMessage","style","textAlign","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.3cd5d23d.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst apiKey = \"16727206-7ae7a1f614d6d42142bf6389f\";\r\n\r\nconst fetchImagesWithQuery = (searchQuery, page = 1, perPage) => {\r\n  return axios\r\n    .get(\r\n      `https://pixabay.com/api/?image_type=photo&orientation=horizontal&q=${searchQuery}&page=${page}&per_page=${perPage}&key=${apiKey}`\r\n    )\r\n    .then((response) => response);\r\n};\r\n\r\nexport default { fetchImagesWithQuery };\r\n","import React from \"react\";\r\nimport Loader from \"react-loader-spinner\";\r\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\r\n\r\nconst Spinner = () => (\r\n  <div className=\"Loader\">\r\n    <Loader\r\n      type=\"Rings\"\r\n      color=\"#20b2aa\"\r\n      height={200}\r\n      width={200}\r\n      timeout={3000}\r\n    />\r\n  </div>\r\n);\r\n\r\nexport default Spinner;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Searchbar extends Component {\r\n  state = { inputValue: \"\" };\r\n\r\n  handleChange = (e) => {\r\n    this.setState({ inputValue: e.target.value });\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n\r\n    this.props.onSubmit(this.state.inputValue);\r\n    this.setState({ inputValue: \"\" });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <header className=\"Searchbar\">\r\n        <form className=\"SearchForm\" onSubmit={this.handleSubmit}>\r\n          <button type=\"submit\" className=\"SearchForm-button\">\r\n            <span className=\"SearchForm-button-label\">Search</span>\r\n          </button>\r\n\r\n          <input\r\n            className=\"SearchForm-input\"\r\n            type=\"text\"\r\n            autoComplete=\"off\"\r\n            autoFocus\r\n            placeholder=\"Search...\"\r\n            onChange={this.handleChange}\r\n            value={this.state.inputValue}\r\n          />\r\n        </form>\r\n      </header>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Searchbar;\r\n","import React from 'react';\r\n\r\nconst ImageGalleryItem = ({\r\n  webformatURL,\r\n  largeImageURL,\r\n  tags,\r\n  onGetLargeImageUrl,\r\n}) => (\r\n  <li className=\"ImageGalleryItem\">\r\n    <img\r\n      src={webformatURL}\r\n      alt={tags}\r\n      className=\"ImageGalleryItem-image\"\r\n      onClick={() => onGetLargeImageUrl(largeImageURL)}\r\n    />\r\n  </li>\r\n);\r\n\r\nexport default ImageGalleryItem;\r\n","import React from \"react\";\r\nimport ImageGalleryItem from \"./ImageGalleryItem\";\r\n\r\nconst ImageGallery = ({ images, onGetLargeImageUrl }) => (\r\n  <ul className=\"ImageGallery\">\r\n    {images.map((image) => (\r\n      <ImageGalleryItem\r\n        key={image.id}\r\n        {...image}\r\n        onGetLargeImageUrl={onGetLargeImageUrl}\r\n      />\r\n    ))}\r\n  </ul>\r\n);\r\n\r\nexport default ImageGallery;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Modal extends Component {\r\n  componentDidMount() {\r\n    window.addEventListener(\"keydown\", this.closeModal);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"keydown\", this.closeModal);\r\n  }\r\n\r\n  closeModal = (e) => {\r\n    if (e.code === \"Escape\") {\r\n      this.props.onCloseModal();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Overlay\">\r\n        <div className=\"Modal\">{this.props.children}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;\r\n","import React from \"react\";\r\nimport ReactNotification from \"react-notifications-component\";\r\nimport \"react-notifications-component/dist/theme.css\";\r\nimport { store } from \"react-notifications-component\";\r\n\r\nconst Notification = ({ message, error, type }) => {\r\n  store.addNotification({\r\n    title: `${message}`,\r\n    message: `${error}`,\r\n    type: `${type}`,\r\n    insert: \"top\",\r\n    container: \"top-right\",\r\n    animationIn: [\"animated\", \"fadeIn\"],\r\n    animationOut: [\"animated\", \"fadeOut\"],\r\n    dismiss: {\r\n      duration: 5000,\r\n    },\r\n  });\r\n\r\n  return <ReactNotification />;\r\n};\r\n\r\nexport default Notification;\r\n","import React from \"react\";\r\n\r\nconst LargeImg = ({ largeImg, closeModal }) => (\r\n  <div className=\"ModalWrapper\">\r\n    <img src={largeImg} alt={largeImg} className=\"LargeImg\" />\r\n    <button type=\"button\" className=\"CloseModal\" onClick={closeModal}></button>\r\n  </div>\r\n);\r\n\r\nexport default LargeImg;\r\n","import React from 'react';\r\n\r\nconst ToTopButton = ({ atTheTop, toggleButton }) => (\r\n  <button\r\n    type=\"button\"\r\n    className={atTheTop ? 'ToBottomBtn' : 'ToTopBtn'}\r\n    onClick={toggleButton}\r\n  ></button>\r\n);\r\n\r\nexport default ToTopButton;\r\n","import React, { Component } from \"react\";\nimport InfiniteScroll from \"react-infinite-scroll-component\";\nimport imagesApi from \"../services/imagesApi\";\nimport Spinner from \"./Spinner\";\nimport Searchbar from \"./Searchbar\";\nimport ImageGallery from \"./ImageGallery\";\nimport Modal from \"./Modal\";\nimport Notification from \"./Notification\";\nimport LargeImg from \"./LargeImg\";\nimport ToTopButton from \"./ToTopButton\";\n\nconst smoothScroll = () => {\n  window.scrollTo({\n    top: document.documentElement.scrollHeight,\n    behavior: \"smooth\",\n  });\n};\n\nclass App extends Component {\n  state = {\n    images: [],\n    error: null,\n    searchQuery: \"\",\n    page: 1,\n    perPage: 12,\n    largeImg: null,\n    atTheTop: false,\n    hasMore: true,\n  };\n\n  componentDidMount() {\n    this.fetchImages();\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const { searchQuery } = this.state;\n    if (prevState.searchQuery !== searchQuery) {\n      this.fetchImages();\n    }\n  }\n\n  fetchImages = async () => {\n    const { searchQuery, page, perPage, images } = this.state;\n    this.setState({ hasMore: true });\n\n    try {\n      const result = await imagesApi.fetchImagesWithQuery(\n        searchQuery,\n        page,\n        perPage\n      );\n\n      this.setState((prev) => ({\n        images: [...prev.images, ...result.data.hits],\n        page: prev.page + 1,\n        hasMore: images.length < result.data.total ? true : false,\n      }));\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  handleSearchSubmit = (query) => {\n    this.setState({\n      searchQuery: query,\n      page: 1,\n      images: [],\n    });\n  };\n\n  getLargeImageUrl = (largeImageURL) => {\n    this.setState({ largeImg: largeImageURL });\n  };\n\n  closeModal = () => {\n    this.setState({ largeImg: null });\n  };\n\n  toggleButton = () => {\n    this.setState((prev) => ({ atTheTop: !prev.atTheTop }));\n    this.state.atTheTop ? smoothScroll() : window.scrollTo(0, 0);\n  };\n  render() {\n    const { images, error, largeImg, atTheTop, hasMore } = this.state;\n\n    return (\n      <div className=\"App\">\n        {error && (\n          <Notification\n            message={\"Whoops, something went wrong\"}\n            error={error.message}\n            type={\"danger\"}\n          />\n        )}\n        <>\n          <Searchbar onSubmit={this.handleSearchSubmit} />\n\n          {!hasMore && !images.length && (\n            <>\n              <div className=\"NotFound\"></div>\n              <Notification\n                message=\"Please enter another query\"\n                error=\"No matches found\"\n                type=\"danger\"\n              />\n            </>\n          )}\n        </>\n        <>\n          {images.length > 0 && (\n            <InfiniteScroll\n              dataLength={images.length}\n              next={this.fetchImages}\n              hasMore={hasMore}\n              loader={<Spinner />}\n              endMessage={\n                <p style={{ textAlign: \"center\" }}>\n                  <b>Yay! You have seen it all</b>\n                </p>\n              }\n            >\n              <ImageGallery\n                images={images}\n                onGetLargeImageUrl={this.getLargeImageUrl}\n              />\n            </InfiniteScroll>\n          )}\n\n          <ToTopButton atTheTop={atTheTop} toggleButton={this.toggleButton} />\n\n          {largeImg && (\n            <Modal onCloseModal={this.closeModal}>\n              <LargeImg largeImg={largeImg} closeModal={this.closeModal} />\n            </Modal>\n          )}\n        </>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./styles.css\";\nimport App from \"./components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}